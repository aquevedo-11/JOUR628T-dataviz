line_chart_data <- data %>% filter(sex == "F" & name %in% c("Olive", "Betty", "Madison", "Nevaeh", "Stephanie"))
View(line_chart_data)
line_chart_data %>% ggplot(aes(x = year, y = prop))
line_chart_data %>% ggplot(aes(x = year, y = prop, color = name)) +
geom_line() +
theme_minimal()
line_chart_data %>% ggplot(aes(x = year, y = prop, color = name)) +
geom_line() +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(breaks = seq(1900,2017,10)) +
theme_minimal() +
theme(axis.title = element_blank()) +
labs(title = "My awesome chart title", subtitle = "Names as a percentage of all births", color = "Baby name")
line_chart_data %>% ggplot(aes(x = year, y = prop, color = name, fill = name)) +
geom_density(stat = "identity", alpha = .5) +
theme_minimal()
top_names <- data %>% group_by(name) %>% summarize(total = sum(n)) %>% arrange(desc(total)) %>% top_n(20,total)
facet_names <- inner_join(data, top_names)
install.packages("scales")
install.packages("scales")
library(tidyverse)
library(babynames)
library(scales)
install.packages("scales")
library(tidyverse)
library(babynames)
library(scales)
data <- babynames
bar_chart_data <- data %>% filter(year == 2017) %>% top_n(10, n)
data %>% ggplot()
bar_chart_data %>% ggplot(aes(x = name, y = n))
bar_chart_data %>% ggplot(aes(x = name, y = n)) +
geom_col()
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = n)) +
geom_col()
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = n)) +
geom_col(fill = "cadetblue", alpha = .8)
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = comma(n))) +
geom_col(fill = "cadetblue", alpha = .8)
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = comma(n))) +
geom_col(fill = "cadetblue", alpha = .8) +
labs(title = "The 10 most common baby names in 2017", subtitle = "None of these are Heaven spelled backwards.") +
theme_minimal() +
theme(axis.title = element_blank())
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = comma(n))) +
geom_col(fill = "cadetblue", alpha = .8) +
labs(title = "The 10 most common baby names in 2017", subtitle = "None of these are Heaven spelled backwards.", caption = "Source: Social Security Administration\nby Olga Pierce") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_text(aes(label = comma(n)), vjust = -0.5)
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = comma(n), fill = sex)) +
geom_col(alpha = .8) +
labs(title = "The 10 most common baby names in 2017", subtitle = "None of these are Heaven spelled backwards.", caption = "Source: Social Security Administration\nby Olga Pierce") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_text(aes(label = comma(n)), vjust = -0.5)
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = comma(n), fill = sex)) +
geom_col(alpha = .8) +
labs(title = "The 10 most common baby names in 2017", subtitle = "None of these are Heaven spelled backwards.", caption = "Source: Social Security Administration\nby Olga Pierce") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_text(aes(label = comma(n)), vjust = -0.5) +
scale_fill_manual(values=c("#756bb1", "#2ca25f"))
install.packages("scales")
line_chart_data <- data %>% filter(sex == "F" & name %in% c("Olive", "Betty", "Madison", "Nevaeh", "Stephanie"))
View(line_chart_data)
line_chart_data %>% ggplot(aes(x = year, y = prop))
line_chart_data %>% ggplot(aes(x = year, y = prop, color = name)) +
geom_line() +
theme_minimal()
line_chart_data %>% ggplot(aes(x = year, y = prop, color = name)) +
geom_line() +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(breaks = seq(1900,2017,10)) +
theme_minimal() +
theme(axis.title = element_blank()) +
labs(title = "My awesome chart title", subtitle = "Names as a percentage of all births", color = "Baby name")
line_chart_data %>% ggplot(aes(x = year, y = prop, color = name, fill = name)) +
geom_density(stat = "identity", alpha = .5) +
theme_minimal()
top_names <- data %>% group_by(name) %>% summarize(total = sum(n)) %>% arrange(desc(total)) %>% top_n(20,total)
facet_names <- inner_join(data, top_names)
facet_names %>% ggplot(aes(x = year, y = prop, color = name)) +
geom_line() +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(breaks = seq(1900,2017,40)) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(vars(name), ncol = 5)
install.packages("scales")
install.packages("scales")
install.packages("scales")
library(tidyverse)
library(babynames)
library(scales)
data <- babynames
bar_chart_data <- data %>% filter(year == 2017) %>% top_n(10, n)
View(bar_chart_data)
data %>% ggplot()
bar_chart_data %>% ggplot(aes(x = name, y = n))
line_chart_data <- data %>% filter(sex == "F" & name %in% c("Olive", "Betty", "Madison", "Nevaeh", "Stephanie"))
View(line_chart_data)
line_chart_data %>% ggplot(aes(x = year, y = prop))
bar_chart_data <- data %>% filter(year == 1993) %>% top_n(10, n)
View(bar_chart_data)
View(bar_chart_data)
bar_chart_data %>% ggplot(aes(x = name, y = n)) +
geom_col()
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = n)) +
geom_col()
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = n)) +
geom_col(fill = "cadetblue", alpha = .8)
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = comma(n))) +
geom_col(fill = "cadetblue", alpha = .8)
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = comma(n))) +
geom_col(fill = "cadetblue", alpha = .8) +
labs(title = "The 10 most common baby names in 2017", subtitle = "None of these are Heaven spelled backwards.") +
theme_minimal() +
theme(axis.title = element_blank())
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = comma(n))) +
geom_col(fill = "cadetblue", alpha = .8) +
labs(title = "The 10 most common baby names in 2017", subtitle = "None of these are Heaven spelled backwards.", caption = "Source: Social Security Administration\nby Olga Pierce") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_text(aes(label = comma(n)), vjust = -0.5)
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = comma(n), fill = sex)) +
geom_col(alpha = .8) +
labs(title = "The 10 most common baby names in 2017", subtitle = "None of these are Heaven spelled backwards.", caption = "Source: Social Security Administration\nby Olga Pierce") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_text(aes(label = comma(n)), vjust = -0.5)
bar_chart_data %>% ggplot(aes(x = reorder(name,desc(n)), y = comma(n), fill = sex)) +
geom_col(alpha = .8) +
labs(title = "The 10 most common baby names in 2017", subtitle = "None of these are Heaven spelled backwards.", caption = "Source: Social Security Administration\nby Olga Pierce") +
theme_minimal() +
theme(axis.title = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_text(aes(label = comma(n)), vjust = -0.5) +
scale_fill_manual(values=c("#756bb1", "#2ca25f"))
line_chart_data <- data %>% filter(sex == "F" & name %in% c("Guadalupe", "Adriana", "Nina", "Susana", "Luz"))
View(line_chart_data)
line_chart_data %>% ggplot(aes(x = year, y = prop))
line_chart_data %>% ggplot(aes(x = year, y = prop, color = name)) +
geom_line() +
theme_minimal()
line_chart_data %>% ggplot(aes(x = year, y = prop, color = name)) +
geom_line() +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(breaks = seq(1900,2017,10)) +
theme_minimal() +
theme(axis.title = element_blank()) +
labs(title = "My awesome chart title", subtitle = "Names as a percentage of all births", color = "Baby name")
line_chart_data %>% ggplot(aes(x = year, y = prop, color = name, fill = name)) +
geom_density(stat = "identity", alpha = .5) +
theme_minimal()
top_names <- data %>% group_by(name) %>% summarize(total = sum(n)) %>% arrange(desc(total)) %>% top_n(20,total)
facet_names <- inner_join(data, top_names)
facet_names %>% ggplot(aes(x = year, y = prop, color = name)) +
geom_line() +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(breaks = seq(1900,2017,40)) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(vars(name), ncol = 5)
top_names <- data %>% group_by(name) %>% summarize(total = sum(n)) %>% arrange(desc(total)) %>% top_n(20,total)
facet_names <- inner_join(data, top_names)
View(facet_names)
facet_names %>% ggplot(aes(x = year, y = prop, color = name)) +
geom_line() +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(breaks = seq(1900,2017,40)) +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(vars(name), ncol = 5)
install.packages("treemapify")
install.packages("RColorBrewer")
install.packages('svglite')
library(tidyverse)
library(scales)
library(treemapify)
library(RColorBrewer)
library(svglite)
spotify_data <- read.csv("Most_Streamed_Spotify _Songs_2023.csv")
spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(track_name,desc(streams)), y = streams)) +
geom_col()
View(spotify_bar_chart_data)
View(spotify_bar_chart_data)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(track_name,desc(streams)), y = streams)) +
geom_col()+
scale_y_continuous(labels = scales::label_number(scale = 1e-9, suffix = "B")) +
scale_x_discrete(guide = guide_axis(angle = 45))
spotify_bar_chart_data %>% ggplot(aes(x = reorder(track_name,desc(streams)), y = streams)) +
geom_col(fill="darkgreen")+
scale_y_continuous(labels = scales::label_number(scale = 1e-9, suffix = "B")) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Top Spotify Tracks of 2023", subtitle = "The Weekend's Blinding Lights takes the top spot with over 3 billion streams.", caption = "Source: Spotify via Kaggle \n by Adam Marton")+
theme_minimal()+
theme(axis.title = element_blank())
ggplot(spotify_data, aes(danceability_., energy_.)) +
geom_point()
ggplot(spotify_data, aes(danceability_., energy_., color = key)) +
geom_point()
ggplot(spotify_data, aes(danceability_., energy_., color = key)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired")
ggplot(spotify_data, aes(danceability_., energy_., color = key)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are energy and danceability related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by Adam Marton", x = "Danceability", y = "Energy", size = "Speechiness", color = "Key")
ggplot(spotify_data, aes(danceability_., energy_., color = key)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are energy and danceability related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by Adam Marton", x = "Danceability", y = "Energy", size = "Speechiness", color = "Key") +
facet_wrap(~key)
spotify_area_data <- spotify_data %>%
group_by(released_year) %>%
summarize(count_by_year = n())
ggplot(spotify_area_data, aes(x=released_year, y=count_by_year)) +
geom_area(alpha = 0.5, fill="darkgreen")
ggplot(spotify_area_data, aes(x=released_year, y=count_by_year)) +
geom_area(alpha = 0.5, fill="darkgreen") +
labs(title = "Most of Spotify's most popular songs of 2023 were recently released", subtitle = "Though songs go back as far as 1930", caption = "Source: Spotify via Kaggle \n by Adam Marton", x = "Year", y = "Count") +
theme_minimal()
spotify_tree_data <- spotify_data %>%
group_by(key) %>%
summarize(count_by_key = n())
ggplot(spotify_tree_data, aes(area = count_by_key, fill = key)) +
geom_treemap() +
theme_minimal() +
labs(title = "Top Spotify songs by key", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by Adam Marton", color = "Key")
View(spotify_tree_data)
View(spotify_tree_data)
ggplot(spotify_tree_data, aes(area = count_by_key, fill = key, label = count_by_key)) +
geom_treemap() +
theme_minimal() +
labs(title = "Top Spotify songs by key", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by Adam Marton", color = "Key")+
geom_treemap_text(colour = "white",
place = "centre",
size = 15)+
scale_fill_brewer(palette = "Paired")
spotify_tree_graph <- ggplot(spotify_tree_data, aes(area = count_by_key, fill = key, label = count_by_key)) +
geom_treemap() +
theme_minimal() +
labs(title = "Top Spotify songs by key", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by Adam Marton", color = "Key")+
geom_treemap_text(colour = "white",
place = "centre",
size = 15)+
scale_fill_brewer(palette = "Paired")
spotify_tree_graph = ggsave(file="tree.svg")
spotify_tree_graph = ggsave(file="tree.png")
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
View(pt2_spotify_bar_chart_data)
View(pt2_spotify_bar_chart_data)
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(track_name,desc(streams)), y = streams)) +
geom_col()
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(artist.s_name,desc(streams)), y = streams)) +
geom_col()
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(artist.s._name,desc(streams)), y = streams)) +
geom_col()
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(artist.s._name,desc(streams)), y = streams)) +
geom_col(fill="darkgreen")+
scale_y_continuous(labels = scales::label_number(scale = 1e-9, suffix = "B")) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Top Spotify Tracks of 2023", subtitle = "The Weekend's Blinding Lights takes the top spot with over 3 billion streams.", caption = "Source: Spotify via Kaggle \n by April Quevedo")+
theme_minimal()+
theme(axis.title = element_blank())
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(artist.s._name,desc(streams)), y = streams)) +
geom_col(fill="neongreen")+
scale_y_continuous(labels = scales::label_number(scale = 1e-9, suffix = "B")) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Top Spotify Tracks of 2023", subtitle = "The Weekend's Blinding Lights takes the top spot with over 3 billion streams.", caption = "Source: Spotify via Kaggle \n by April Quevedo")+
theme_minimal()+
theme(axis.title = element_blank())
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(artist.s._name,desc(streams)), y = streams)) +
geom_col(fill="green")+
scale_y_continuous(labels = scales::label_number(scale = 1e-9, suffix = "B")) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Top Spotify Tracks of 2023", subtitle = "The Weekend's Blinding Lights takes the top spot with over 3 billion streams.", caption = "Source: Spotify via Kaggle \n by April Quevedo")+
theme_minimal()+
theme(axis.title = element_blank())
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(artist.s._name,desc(streams)), y = streams)) +
geom_col(fill="green")+
scale_y_continuous(labels = scales::label_number(scale = 1e-9, suffix = "B")) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Living for The Weeknd", subtitle = "Songs by The Weeknd appeared twice in 2023's top streamed songs on Spotify. Blinding Lights takes the top spot with over 3 billion streams, and Starboy ft. Daft Punk came in at n0. 10 with over 2.5 billion streams.", caption = "Source: Spotify via Kaggle \n by April Quevedo")+
theme_minimal()+
theme(axis.title = element_blank())
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(artist.s._name,desc(streams)), y = streams)) +
geom_col(fill="green")+
scale_y_continuous(labels = scales::label_number(scale = 1e-9, suffix = "B")) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Living for The Weeknd", subtitle = "Songs by The Weeknd appeared twice in 2023's top streamed songs on Spotify. \nBlinding Lights takes the top spot with over 3 billion streams, and Starboy ft. Daft Punk came in at n0. 10 with over 2.5 billion streams.", caption = "Source: Spotify via Kaggle \n by April Quevedo")+
theme_minimal()+
theme(axis.title = element_blank())
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(artist.s._name,desc(streams)), y = streams)) +
geom_col(fill="green")+
scale_y_continuous(labels = scales::label_number(scale = 1e-9, suffix = "B")) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Living for The Weeknd", subtitle = "Songs by The Weeknd appeared twice in 2023's top streamed songs on Spotify. \nBlinding Lights takes the top spot with over 3 billion streams, \nand Starboy ft. Daft Punk came in at number 10 with over 2.5 billion streams.", caption = "Source: Spotify via Kaggle \n by April Quevedo")+
theme_minimal()+
theme(axis.title = element_blank())
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(artist.s._name,desc(streams)), y = streams)) +
geom_col(fill="green")+
scale_y_continuous(labels = scales::label_number(scale = 1e-9, suffix = "B")) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Living for The Weeknd", subtitle = "Songs by The Weeknd appeared twice in 2023's top streamed songs on Spotify. \nBlinding Lights takes the top spot with over 3 billion streams, and Starboy ft. Daft Punk came \nin at number 10 with over 2.5 billion streams.", caption = "Source: Spotify via Kaggle \n by April Quevedo")+
theme_minimal()+
theme(axis.title = element_blank())
pt2_spotify_bar_chart_data <- spotify_data %>% top_n(10, streams)
spotify_bar_chart_data %>% ggplot(aes(x = reorder(artist.s._name,desc(streams)), y = streams)) +
geom_col(fill="green")+
scale_y_continuous(labels = scales::label_number(scale = 1e-9, suffix = "B")) +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Living for The Weeknd", subtitle = "Songs by The Weeknd appeared twice in 2023's top streamed songs on Spotify. \nBlinding Lights took the top spot with over 3 billion streams, and Starboy ft. Daft Punk \ncame in at number 10 with over 2.5 billion streams.", caption = "Source: Spotify via Kaggle \n by April Quevedo")+
theme_minimal()+
theme(axis.title = element_blank())
ggplot(spotify_data, aes(danceability_., energy_.)) +
geom_point()
View(spotify_data)
View(spotify_data)
ggplot(spotify_data, aes(acousticnes_., speechiness_.)) +
geom_point()
ggplot(spotify_data, aes(acousticness_., speechiness_.)) +
geom_point()
ggplot(spotify_data, aes(acousticness_., liveness_.)) +
geom_point()
ggplot(spotify_data, aes(acousticness_., liveness_.)) +
geom_point()
ggplot(spotify_data, aes(acousticness_., liveness_., color = bpm)) +
geom_point(alpha = .5, aes(size = bpm))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are energy and danceability related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by Adam Marton", x = "Danceability", y = "Energy", size = "Speechiness", color = "Key")
ggplot(spotify_data, aes(acousticness_., liveness_.)) +
geom_point()
ggplot(spotify_data, aes(acousticness_., liveness_., color = bpm)) +
geom_point(alpha = .5, aes(size = bpm))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are energy and danceability related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by Adam Marton", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "bpm")
## ggplot(spotify_data, aes(acousticness_., liveness_.)) +
##    geom_point()
ggplot(spotify_data, aes(acousticness_., liveness_., color = bpm)) +
geom_point(alpha = .5, aes(size = bpm))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are energy and danceability related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by Adam Marton", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "bpm")
## ggplot(spotify_data, aes(acousticness_., liveness_.)) +
##    geom_point()
ggplot(spotify_data, aes(acousticness_., liveness_., color = bpm)) +
geom_point(alpha = .5, aes(size = bpm))+
# theme_minimal() +
#  scale_color_brewer(palette="Paired") +
# labs(title = "Are energy and danceability related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by Adam Marton", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "bpm")
## ggplot(spotify_data, aes(acousticness_., liveness_.)) +
##    geom_point()
ggplot(spotify_data, aes(acousticness_., liveness_., color = bpm)) +
geom_point(alpha = .5, aes(size = bpm))+
# theme_minimal() +
#  scale_color_brewer(palette="Paired") +
# labs(title = "Are energy and danceability related?", subtitle = "Examining the top Spotify songs of 2023", #caption = "Source: Spotify via Kaggle \n by Adam Marton", x = "Acousticness", y = "Liveness", size = "Speechiness", #color = "bpm")
ggplot(spotify_data, aes(acousticness_., liveness_., color = key)) +
geom_point()
ggplot(spotify_data, aes(acousticness_., liveness_., color = key)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired")
ggplot(spotify_data, aes(acousticness_., liveness_., color = bpm)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired")
ggplot(spotify_data, aes(acousticness_., liveness_., color = key)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired")
labs(title = "Are energy and danceability related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by Adam Marton", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "Key")
ggplot(spotify_data, aes(acousticness_., liveness_., color = key)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired")
labs(title = "Are acousticness and liveness related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "Key")
ggplot(spotify_data, aes(acousticness_., liveness_., color = key)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are acousticness and liveness related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "Key")
ggplot(spotify_data, aes(acousticness_., liveness_., color = artist_count)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are acousticness and liveness related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "Artist Count")
ggplot(spotify_data, aes(acousticness_., liveness_., color = artist_count)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are acousticness and liveness related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "Key")
ggplot(spotify_data, aes(acousticness_., liveness_., color = key)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are acousticness and liveness related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "Key")
ggplot(spotify_data, aes(released_month, released_day)) +
geom_point()+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are acousticness and liveness related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Acousticness", y = "Liveness")
ggplot(spotify_data, aes(released_month, released_day)) +
geom_point()+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are acousticness and liveness related?", subtitle = "Examining the top Spotify songs of 2023", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Released Month", y = "Released Day")
pt2_spotify_area_data <- spotify_data
pt2_spotify_area_data <- spotify_data |> group_by(released_month, released_day)
View(pt2_spotify_area_data)
View(pt2_spotify_area_data)
pt2_spotify_area_data <- spotify_data |> group_by(released_month) |> summarize(n())
View(pt2_spotify_area_data)
pt2_spotify_area_data <- spotify_data |> group_by(released_month) |> summarize(total_songs = n())
pt2_spotify_area_data <- spotify_data |> group_by(released_month) |> summarize(total_songs = n())
pt2_spotify_area_data %>% ggplot(aes(x = reorder(released_month)), y = total_songs)) +
pt2_spotify_area_data <- spotify_data |> group_by(released_month) |> summarize(total_songs = n()) |>
pt2_spotify_area_data %>% ggplot(aes(x = reorder(released_month)), y = total_songs)) +
pt2_spotify_area_data <- spotify_data |> group_by(released_month) |> summarize(total_songs = n())
pt2_spotify_area_data |> ggplot(aes(x = reorder(released_month)), y = total_songs)) +
pt2_spotify_area_data <- spotify_data |> group_by(released_month) |> summarize(total_songs = n())
pt2_spotify_area_data |> ggplot(aes(x = reorder(released_month)), y = total_songs) +
geom_col()
pt2_spotify_area_data <- spotify_data |> group_by(released_month) |> summarize(total_songs = n()) |>
pt2_spotify_area_data |> ggplot(aes(x = reorder(released_month)), y = total_songs)) +
pt2_spotify_area_data <- spotify_data |> group_by(released_month) |> summarize(total_songs = n()) |>
ggplot(aes(x = reorder(released_month)), y = total_songs)) +
pt2_spotify_area_data %>% ggplot(aes(x = reorder(released_month)), y = total_songs)) +
pt2_spotify_area_data %>% ggplot(aes(x = reorder(released_month)), y = total_songs) +
geom_col()
pt2_spotify_area_data %>% ggplot(aes(x = reorder(released_month)), (y = total_songs)) +
geom_col()
pt2_spotify_area_data %>% ggplot(aes(x = released_month), (y = total_songs)) +
geom_col()
##pt2_spotify_area_data %>% ggplot(aes(x = released_month), (y = total_songs)) +
##  geom_col()
pt2_spotify_area_data %>% ggplot(aes(x = reorder(released_month,desc(total_songs)), y = total_songs)) +
geom_col()
ggplot(spotify_area_data, aes(x=released_month, y=total_songs)) +
geom_area(alpha = 0.5, fill="green") +
labs(title = "Most of Spotify's most popular songs of 2023 were recently released", subtitle = "Though songs go back as far as 1930", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Month", y = "Count") +
theme_minimal()
ggplot(spotify_area_data, aes(x=released_month, y=total_songs)) +
geom_area(alpha = 0.5, fill="green") +
labs(title = "Most of Spotify's most popular songs of 2023 were recently released", subtitle = "Though songs go back as far as 1930", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Month", y = "Count") +
theme_minimal()
ggplot(spotify_data, aes(acousticness_., liveness_., color = key)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are acousticness and liveness related?", subtitle = "Adam, I won't lie, I have no idea what this is telling me. No?", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "Key")
ggplot(spotify_data, aes(acousticness_., liveness_., color = key)) +
geom_point(alpha = .5, aes(size = speechiness_.))+
theme_minimal() +
scale_color_brewer(palette="Paired") +
labs(title = "Are acousticness and liveness related?", subtitle = "Adam, I won't lie...I have no idea what this is telling me. No?", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Acousticness", y = "Liveness", size = "Speechiness", color = "Key")
ggplot(pt2_spotify_area_data, aes(x=released_month, y=total_songs)) +
geom_area(alpha = 0.5, fill="green") +
labs(title = "Most of Spotify's most popular songs of 2023 were recently released", subtitle = "Though songs go back as far as 1930", caption = "Source: Spotify via Kaggle \n by April Quevedo", x = "Month", y = "Count") +
theme_minimal()
##pt2_spotify_area_data %>% ggplot(aes(x = reorder(released_month,desc(total_songs)), y = total_songs)) +
##  geom_col()
pt2_spotify_area_data <- spotify_data |> group_by(mode) |> summarize(total_songs = n())
pt2_spotify_area_data %>% ggplot(aes(x = mode, y = total_songs)) +
geom_col()
pt2_spotify_area_data %>% ggplot(aes(x = mode, y = total_songs)) +
geom_col(fill = "green")
pt2_spotify_area_data %>% ggplot(aes(x = mode, y = total_songs)) +
geom_col(fill = "green") +
labs(title = "Top Spotify Tracks of 2023", subtitle = "The Weekend's Blinding Lights takes the top spot with over 3 billion streams.", caption = "Source: Spotify via Kaggle \n by April Quevedo")+
theme_minimal()+
theme(axis.title = element_blank())
pt2_spotify_area_data %>% ggplot(aes(x = mode, y = total_songs)) +
geom_col(fill = "blue") +
labs(title = "Mode of Top Spotify Tracks of 2023", subtitle = "More songs were in major key than minor key.", caption = "Source: Spotify via Kaggle \n by April Quevedo")+
theme_minimal()+
theme(axis.title = element_blank())
